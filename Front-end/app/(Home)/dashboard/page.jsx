"use client"

import { useEffect, useState } from "react"
import Header from "@/components/header"
import Footer from "@/components/footer"
import Link from "next/link"

export default function DashboardPage() {
  const [courses, setCourses] = useState([])

  const myCourses = [
    {
      id: 1,
      title: "Kh√≥a h·ªçc ph√°t tri·ªÉn React",
      instructor: "Nguy·ªÖn H·∫£i Tr∆∞·ªùng",
      progress: 65,
      thumbnail: "/react-course.png",
      totalLessons: 45,
      completedLessons: 29,
      lastAccessed: "2 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 2,
      title: "H·ªçc C++",
      instructor: "Tr·∫ßn VƒÉn An",
      progress: 30,
      thumbnail: "/cpp-course.jpg",
      totalLessons: 60,
      completedLessons: 18,
      lastAccessed: "1 ng√†y tr∆∞·ªõc",
    },
    {
      id: 3,
      title: "L·∫≠p tr√¨nh Web v·ªõi Node.js",
      instructor: "L√™ Th·ªã Mai",
      progress: 85,
      thumbnail: "/nodejs-course.jpg",
      totalLessons: 40,
      completedLessons: 34,
      lastAccessed: "5 gi·ªù tr∆∞·ªõc",
    },
    {
      id: 4,
      title: "Database v·ªõi MongoDB",
      instructor: "Ph·∫°m Minh Tu·∫•n",
      progress: 50,
      thumbnail: "/mongodb-course.jpg",
      totalLessons: 35,
      completedLessons: 17,
      lastAccessed: "3 ng√†y tr∆∞·ªõc",
    },
  ]

  useEffect(() => {
    // Fade in animation for course cards
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            setTimeout(() => {
              entry.target.classList.add("visible")
            }, index * 150)
          }
        })
      },
      { threshold: 0.1 },
    )

    const cards = document.querySelectorAll(".dashboard-course-card")
    cards.forEach((card) => observer.observe(card))

    return () => observer.disconnect()
  }, [])

  return (
    <div className="min-h-screen bg-white-50">
      <Header />

      <main className="container mx-auto px-4 py-12">
        {/* Header */}
        <div className="mb-12">
          <h1 className="text-4xl font-bold mb-2">Dashboard c·ªßa t√¥i</h1>
          <p className="text-white-600">Qu·∫£n l√Ω v√† ti·∫øp t·ª•c h·ªçc t·∫≠p c√°c kh√≥a h·ªçc c·ªßa b·∫°n</p>
        </div>

        {/* Stats Cards */}
        <div className="grid md:grid-cols-4 gap-6 mb-12">
          <div className="bg-white rounded-xl shadow-md p-6 hover:shadow-lg transition-shadow">
            <div className="flex items-center justify-between mb-2">
              <span className="text-3xl">üìö</span>
              <span className="text-sm text-white-500">Kh√≥a h·ªçc</span>
            </div>
            <p className="text-3xl font-bold text-purple-600">{myCourses.length}</p>
            <p className="text-sm text-white-600 mt-1">ƒêang h·ªçc</p>
          </div>

          <div className="bg-white rounded-xl shadow-md p-6 hover:shadow-lg transition-shadow">
            <div className="flex items-center justify-between mb-2">
              <span className="text-3xl">‚úÖ</span>
              <span className="text-sm text-white-500">Ho√†n th√†nh</span>
            </div>
            <p className="text-3xl font-bold text-green-600">
              {myCourses.reduce((acc, course) => acc + course.completedLessons, 0)}
            </p>
            <p className="text-sm text-white-600 mt-1">B√†i h·ªçc</p>
          </div>

          <div className="bg-white rounded-xl shadow-md p-6 hover:shadow-lg transition-shadow">
            <div className="flex items-center justify-between mb-2">
              <span className="text-3xl">‚è±Ô∏è</span>
              <span className="text-sm text-white-500">Th·ªùi gian</span>
            </div>
            <p className="text-3xl font-bold text-cyan-600">127</p>
            <p className="text-sm text-white-600 mt-1">Gi·ªù h·ªçc</p>
          </div>

          <div className="bg-white rounded-xl shadow-md p-6 hover:shadow-lg transition-shadow">
            <div className="flex items-center justify-between mb-2">
              <span className="text-3xl">üèÜ</span>
              <span className="text-sm text-white-500">Ch·ª©ng ch·ªâ</span>
            </div>
            <p className="text-3xl font-bold text-yellow-600">2</p>
            <p className="text-sm text-white-600 mt-1">ƒê√£ ƒë·∫°t ƒë∆∞·ª£c</p>
          </div>
        </div>

        {/* My Courses */}
        <div className="mb-8">
          <h2 className="text-2xl font-bold mb-6">H·ªçc T·∫≠p</h2>

          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {myCourses.map((course, index) => (
              <div
                key={course.id}
                className="dashboard-course-card bg-white rounded-xl shadow-md overflow-hidden hover:shadow-xl transition-all duration-300 opacity-0 translate-y-8"
              >
                <div className="relative">
                  <img
                    src={course.thumbnail || "/placeholder.svg"}
                    alt={course.title}
                    className="w-full h-48 object-cover"
                  />
                  <div className="absolute top-4 right-4 bg-purple-600 text-white px-3 py-1 rounded-full text-sm font-semibold">
                    {course.progress}%
                  </div>
                </div>

                <div className="p-6">
                  <h3 className="font-bold text-lg mb-2 line-clamp-2">{course.title}</h3>
                  <p className="text-sm text-white-600 mb-4">{course.instructor?.name || "Ch∆∞a c√≥ gi·∫£ng vi√™n"}</p>

                  {/* Progress Bar */}
                  <div className="mb-4">
                    <div className="flex justify-between text-sm text-white-600 mb-2">
                      <span>
                        {course.completedLessons}/{course.totalLessons} b√†i h·ªçc
                      </span>
                      <span className="font-semibold">{course.progress}%</span>
                    </div>
                    <div className="h-2 bg-white-200 rounded-full overflow-hidden">
                      <div
                        className="h-full bg-gradient-to-r from-purple-600 to-cyan-500 transition-all duration-1000 ease-out progress-bar"
                        style={{ width: `${course.progress}%` }}
                      />
                    </div>
                  </div>

                  <div className="flex items-center justify-between text-sm text-white-500 mb-4">
                    <span>Truy c·∫≠p: {course.lastAccessed}</span>
                  </div>

                  <Link
                    href={`/learn/${course.id}`}
                    className="block w-full text-center bg-purple-600 text-white py-3 rounded-lg font-semibold hover:bg-purple-700 transition-colors"
                  >
                    Ti·∫øp t·ª•c h·ªçc
                  </Link>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Recommended Courses */}
        <div>
          <h2 className="text-2xl font-bold mb-6">Kh√≥a h·ªçc ƒë·ªÅ xu·∫•t</h2>
          <div className="bg-white rounded-xl shadow-md p-8 text-center">
            <span className="text-6xl mb-4 block">üéØ</span>
            <h3 className="text-xl font-bold mb-2">Kh√°m ph√° th√™m kh√≥a h·ªçc m·ªõi</h3>
            <p className="text-white-600 mb-6">M·ªü r·ªông ki·∫øn th·ª©c c·ªßa b·∫°n v·ªõi h√†ng trƒÉm kh√≥a h·ªçc ch·∫•t l∆∞·ª£ng cao</p>
            <Link
              href="/courses"
              className="inline-block px-8 py-3 bg-gradient-to-r from-purple-600 to-cyan-500 text-white rounded-lg font-semibold hover:shadow-lg transition-all"
            >
              Xem t·∫•t c·∫£ kh√≥a h·ªçc
            </Link>
          </div>
        </div>
      </main>

      <Footer />
    </div>
  )
}
