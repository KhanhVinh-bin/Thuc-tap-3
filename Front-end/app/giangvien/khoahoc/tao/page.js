"use client"

"use client"

import "../tao/page.css"       // import global CSS t·ª´ trang ‚Äút·∫°o‚Äù
import "./page.css"            // import CSS hi·ªán t·∫°i

import { useState, useRef } from "react"
import { useRouter } from "next/navigation"


export default function TaoKhoaHocPage() {
  const router = useRouter()
  const fileRef = useRef(null)
  const [title, setTitle] = useState("")
  const [desc, setDesc] = useState("")
  const [category, setCategory] = useState("")
  const [lang, setLang] = useState("vi")
  const [thumbPreview, setThumbPreview] = useState("")

  const handleChooseFile = () => fileRef.current?.click()
  const handleFileChange = (e) => {
    const f = e.target.files?.[0]
    if (!f) return
    const url = URL.createObjectURL(f)
    setThumbPreview(url)
  }

  return (
    <div className="gvc-create-root">
      <div className="gvc-steps">
        <div className="gvc-steps-heading">
          <div className="gvc-steps-title">T·∫°o kh√≥a h·ªçc m·ªõi</div>
          <div className="gvc-steps-desc">Ho√†n th√†nh c√°c b∆∞·ªõc b√™n d∆∞·ªõi ƒë·ªÉ t·∫°o kh√≥a h·ªçc m·ªõi c·ªßa b·∫°n</div>
        </div>
        <div className="gvc-steps-line">
          <div className="gvc-step active">
            <div className="gvc-step-num">1</div>
            <div className="gvc-step-box">
              <div className="gvc-step-title">Th√¥ng tin c∆° b·∫£n</div>
              <div className="gvc-step-sub">Ti√™u ƒë·ªÅ, m√¥ t·∫£ & danh m·ª•c</div>
            </div>
          </div>
          <div className="gvc-step">
            <div className="gvc-step-num">2</div>
            <div className="gvc-step-box">
              <div className="gvc-step-title">Chi ti·∫øt kh√≥a h·ªçc</div>
              <div className="gvc-step-sub">Gi√°, th·ªùi l∆∞·ª£ng v√† y√™u c·∫ßu</div>
            </div>
          </div>
          <div className="gvc-step">
            <div className="gvc-step-num">3</div>
            <div className="gvc-step-box">
              <div className="gvc-step-title">N·ªôi dung ch∆∞∆°ng</div>
              <div className="gvc-step-sub">Th√™m ch∆∞∆°ng v√† b√†i h·ªçc</div>
            </div>
          </div>
          <div className="gvc-step">
            <div className="gvc-step-num">4</div>
            <div className="gvc-step-box">
              <div className="gvc-step-title">Xem tr∆∞·ªõc</div>
              <div className="gvc-step-sub">Ki·ªÉm tra v√† ho√†n th√†nh</div>
            </div>
          </div>
        </div>
        <div className="gvc-progress" />
      </div>

      <div className="gvc-create-grid">
        <section className="gvc-card">
          <div className="gvc-card-header">
            <h1 className="gvc-card-title">Th√¥ng tin c∆° b·∫£n</h1>
          </div>

          <label className="gvc-field">
            <div className="gvc-label">Ti√™u ƒë·ªÅ kh√≥a h·ªçc <span className="req">*</span></div>
            <input className="gvc-input" value={title} onChange={(e)=>setTitle(e.target.value)} placeholder="VD: L·∫≠p tr√¨nh React c∆° b·∫£n ƒë·∫øn n√¢ng cao" />
            <div className="gvc-hint"><span className="gvc-hint-icon">üí°</span><span>Ti√™u ƒë·ªÅ h·∫•p d·∫´n s·∫Ω thu h√∫t nhi·ªÅu h·ªçc vi√™n h∆°n</span></div>
          </label>

          <label className="gvc-field">
            <div className="gvc-label">M√¥ t·∫£ kh√≥a h·ªçc <span className="req">*</span></div>
            <textarea className="gvc-textarea" value={desc} onChange={(e)=>setDesc(e.target.value)} placeholder="M√¥ t·∫£ ng·∫Øn g·ªçn v·ªÅ n·ªôi dung v√† l·ª£i √≠ch c·ªßa kh√≥a h·ªçc..." />
            <div className="gvc-hint"><span className="gvc-hint-icon">üí°</span><span>M√¥ t·∫£ chi ti·∫øt gi√∫p h·ªçc vi√™n hi·ªÉu r√µ h∆°n v·ªÅ kh√≥a h·ªçc</span></div>
          </label>

          <div className="gvc-row">
            <label className="gvc-field">
              <div className="gvc-label">Danh m·ª•c <span className="req">*</span></div>
              <div className="gvc-select-wrap">
                <select className={`gvc-select ${category === "" ? "placeholder" : ""}`} value={category} onChange={(e)=>setCategory(e.target.value)}>
                  <option value="">Ch·ªçn danh m·ª•c</option>
                  <option value="dev">L·∫≠p tr√¨nh</option>
                  <option value="design">Thi·∫øt k·∫ø</option>
                  <option value="marketing">Marketing</option>
                </select>
              </div>
            </label>
           
          </div>
        </section>

        {/* Thumbnail card */}
        <section className="gvc-card">
          <div className="gvc-card-header">
            <div className="gvc-card-icon">üñºÔ∏è</div>
            <div className="gvc-card-title">·∫¢nh thumbnail</div>
          </div>

          <div className="gvc-dropzone">
            {thumbPreview ? (
              <img src={thumbPreview} alt="thumbnail preview" className="gvc-thumb-preview" />
            ) : (
              <div className="gvc-drop-hint">
                <div className="gvc-drop-icon">üì∑</div>
                <div className="gvc-drop-title">Ch·ªçn ·∫£nh thumbnail</div>
                <div className="gvc-drop-desc">PNG, JPG, GIF ‚â§ 5MB ‚Äî K√≠ch th∆∞·ªõc khuy·∫øn ngh·ªã 1280√ó720px</div>
                <button type="button" className="gvc-btn" onClick={handleChooseFile}>T·∫£i ·∫£nh l√™n</button>
                <input ref={fileRef} type="file" accept="image/*" onChange={handleFileChange} hidden />
              </div>
            )}
          </div>
        </section>
      </div>

      <div className="gvc-create-footer">
        <div className="gvc-footer-inner">
          <button className="gvc-btn ghost" type="button" onClick={() => router.push('/giangvien/khoahoc')}>Quay l·∫°i</button>
          <div className="gvc-step-info">B∆∞·ªõc 1 / 4</div>
          <button className="gvc-btn primary" onClick={() => router.push("/giangvien/khoahoc/chitiet")}>Ti·∫øp t·ª•c ‚Üí</button>
        </div>
      </div>
    </div>
  )
}